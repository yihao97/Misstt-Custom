{%- liquid
	assign block_text = hl_input
	if hl_input != blank and hl_phrases != blank and hl_style != blank
		assign highlight_phrases = hl_phrases | newline_to_br | split: '<br />'
		for highlight_phrase in highlight_phrases
			assign highlight_phrase_strip = highlight_phrase | strip 
			assign highlight_phrase_tmp = highlight_phrase_strip | prepend: '§' | append: ';§' | replace: ' ', '&#160'
			assign block_text = block_text | replace: highlight_phrase_strip, highlight_phrase_tmp
		endfor
		if hl_style == 'marker'
			assign block_text = block_text | replace: ';§', '</span>'
			assign block_text = block_text | replace: '§', '<span data-highlight="marker">'
		elsif hl_style == 'circle'
			assign block_text = block_text | replace: ';§', '<mark><svg viewBox="0 0 122 53"><use xlink:href="#hlCircle"></use></svg></mark></span>'
			assign block_text = block_text | replace: '§', '<span data-highlight="circle">'
		elsif hl_style == 'underline'
			assign block_text = block_text | replace: ';§', '<mark><svg viewBox="-400 -55 730 60" fill="none" role="presentation" xmlns="http://www.w3.org/2000/svg"><path stroke="currentColor" stroke-linecap="round" stroke-width="30" pathLength="1" d="m -383.25 -6 c 55.25 -22 130.75 -33.5 293.25 -38 c 54.5 -0.5 195 -2.5 401 15"></path></svg></mark></span>'
			assign block_text = block_text | replace: '§', '<span data-highlight="underline">'
		endif
		if hl_animateWrap == true
			assign block_text = block_text | prepend: '<use-animate>' | append: '</use-animate>'
		endif
	endif 
-%}
{{- block_text -}}